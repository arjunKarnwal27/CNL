import qupath.lib.regions.*
import qupath.lib.objects.PathAnnotationObject
import java.awt.geom.Rectangle2D
import java.awt.Rectangle
import qupath.lib.roi.PointsROI
import qupath.lib.roi.RectangleROI
import qupath.lib.roi.ROIs
import qupath.lib.roi.RoiTools
import qupath.opencv.CellCountsCV

def server = getCurrentServer()
def path = server.getPath()

double downsample = 1.0

// Read the whole image
def metadata = server.getMetadata()
int x = 0
int y = 7300
int width = 13000
int height = 400

def request = RegionRequest.createInstance(path, downsample, x, y, width, height)

def img = server.readRegion(request)
print img

// Create an empty list to store the annotations
def annotations = []

for (y = 0; y < img.getHeight(); y++) {
   for (x = 0; x < img.getWidth(); x++) {
       def rgb = img.getRGB(x, y)
       if (rgb != -16777216) {
           // Annotate the pixel
           RectangleROI roi = ROIs.createRectangleROI((double) x, (double) y + 7500, 1, 1, getCurrentViewer().getImagePlane())

           // Create an annotation object from the ROI
           def annotation = PathObjects.createAnnotationObject(roi)

           // Add the annotation to the list
           annotations.add(annotation)
       }
   }
}

def combinedROI = null
annotations.each { annotation ->
   def roi = annotation.getROI()
   if (roi != null) {
       def rectangleROI = new RectangleROI(roi.boundsX, roi.boundsY, roi.boundsWidth, roi.boundsHeight, getCurrentViewer().getImagePlane())
       if (combinedROI == null) {
           combinedROI = rectangleROI
       } else {
           combinedROI = RoiTools.combineROIs(combinedROI, rectangleROI, RoiTools.CombineOp.ADD)
       }
   }
}

if (combinedROI != null) {
    def annotation = PathObjects.createAnnotationObject(combinedROI)
    
    def hierarchy = getCurrentHierarchy()
    hierarchy.addPathObject(annotation)
    
    selectObjects(annotation)
}

def result = runPlugin('qupath.opencv.CellCountsCV', '{"gaussianSigmaPixels":3.5,"backgroundRadiusPixels":60.0,"doDoG":true,"threshold":1.0,"ensureMainStain":false,"detectionDiameter":1.0}')
